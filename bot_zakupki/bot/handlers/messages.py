import datetime
from typing import List
from typing import Optional

from bot_zakupki.bot.handlers import commands
from bot_zakupki.common import consts
from bot_zakupki.common import dates
from bot_zakupki.common import db
from bot_zakupki.common import models
from bot_zakupki.common import utils

SEARCH_STRING = "–ö–ª—é—á–µ–≤–∞—è —Å—Ç—Ä–æ–∫–∞"
REGION = "–†–µ–≥–∏–æ–Ω"

CMD_START_MSG = (
    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ) –ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è –≤–∞—Å –∑–∞–∫—É–ø–∫–∏ üòé"
    "\n\n"
    "–ö–∞–∂–¥—ã–π –±—É–¥–Ω–∏–π –¥–µ–Ω—å, –≤ 8 —É—Ç—Ä–∞, –º—ã –±—É–¥–µ–º –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–ø–∏—Å–æ–∫ "
    "–ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –¥–ª—è –≤–∞—Å –∑–∞–∫—É–ø–æ–∫. "
    "\n"
    "–î–ª—è –ø–æ–∏—Å–∫–∞ –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ–≥–æ 3 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–æ–º–∞–Ω–¥—ã "
    f"/{commands.ADD_NEW_QUERY}"
    "\n\n"
    "–ü—Ä–æ–±–Ω—ã–µ –ø–µ—Ä–∏–æ–¥ –¥–ª–∏—Ç—Å—è 2 –Ω–µ–¥–µ–ª–∏. "
    "–í –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –º–∞–∫—Å–∏–º—É–º 3 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞."
    "\n\n"
    f"–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞ - /{commands.HELP}\n"
)

CMD_HELP_MSG = (
    "<b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</b>\n"
    "–ö–∞–∂–¥—ã–π –±—É–¥–Ω–∏–π –¥–µ–Ω—å, –≤ 8 —É—Ç—Ä–∞, –º—ã –±—É–¥–µ–º –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö "
    "–¥–ª—è –≤–∞—Å –∑–∞–∫—É–ø–æ–∫.\n"
    "\n"
    "<b>–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥</b>\n"
    "–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –¥–ª–∏—Ç—Å—è 2 –Ω–µ–¥–µ–ª–∏. "
    "–í –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Ä–∞–≤–Ω–æ 3. "
    "–¢–æ –µ—Å—Ç—å, –∫–∞–∂–¥—ã–π –±—É–¥–Ω–∏–π –¥–µ–Ω—å –º—ã –±—É–¥–µ–º –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∑–∞–∫—É–ø–∫–∏ "
    "–ø–æ 3-–º —Ä–∞–∑–Ω—ã–º –∑–∞–ø—Ä–æ—Å–∞–º.\n"
    "\n"
    "<b>–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥</b>\n"
    f"/{commands.ADD_NEW_QUERY} - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞\n"
    f"/{commands.SHOW_ALL_MY_QUERIES} - –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º—è –≤–∞—à–∏—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏ "
    "–Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤\n"
    f"/{commands.CHANGE_QUERY} - –ø—Ä–∏ –ø–æ–º–æ—â–∏ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å "
    "–∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –∑–∞–ø—Ä–æ—Å\n"
    f"/{commands.HELP} - –ø–æ–∫–∞–∂–µ—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ —Ä–∞–∑ üòä\n"
    "\n"
    "<b>–ö–∞–∫ —Å –Ω–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è?</b>\n "
    "–ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞ –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –Ω–∞–º –Ω–∞ –ø–æ—á—Ç—É "
    "zakupki_info@gmail.com"
)

CMD_HELP_SUBSCRIPTION_MSG = "–ù–µ–±–æ–ª—å—à–∞—è —Å–ø—Ä–∞–≤–∫–∞ –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞"

# ========== SEARCH_QUERY_HANDLERS ==========


class CannotAddMoreQueries:
    TRIAL_PERIOD_LIMIT = (
        "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ "
        f"–≤ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ —Ä–∞–≤–Ω–æ {consts.MAX_QUERIES_IN_TRIAL_PERIOD}."
    )
    COMMON_PERIOD_LIMIT = (
        "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ, "
        f"—á–µ–º {consts.MAX_QUERIES_IN_COMMON_PERIOD} –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤."
    )


I_M_FEELING_LUCKY = "–ú–Ω–µ –ø–æ–≤–µ–∑—ë—Ç"

SEARCH_STRING_MSG = (
    "–î–ª—è –Ω–∞—á–∞–ª–∞, –≤–≤–µ–¥–∏—Ç–µ <b>–∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏–ª–∏ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ</b>, "
    "–ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –º—ã –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –≤–∞–º –∑–∞–∫—É–ø–∫–∏.\n"
    "–°–ª–æ–≤–∞ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ –∏ –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ, "
    "–∏–Ω–æ–≥–¥–∞ –¥–∞–∂–µ –±–µ–∑ –æ–∫–æ–Ω—á–∞–Ω–∏–π.\n"
    "\n"
    "–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
    "- <b>—Ç–µ–ª–µ—Ñ–æ–Ω</b>, –∞ –Ω–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã\n"
    "- <b>—à–æ–∫–æ–ª–∞–¥ —Ç–æ—Ä—Ç</b>, –∞ –Ω–µ —à–æ–∫–æ–ª–∞–¥–Ω—ã–µ —Ç–æ—Ä—Ç—ã\n"
    "\n"
    "–ï—Å–ª–∏ –ø—Ä–µ–¥–º–µ—Ç –∑–∞–∫—É–ø–∫–∏ –≤–∞–º –Ω–µ —Å—Ç–æ–ª—å –≤–∞–∂–µ–Ω, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "
    f'"<b>{I_M_FEELING_LUCKY}</b>" –∏ –º—ã –±—É–¥–µ–º –ø—Ä–∏—Å—ã–ª–∞—Ç—å –ø–æ 20 –∑–∞–∫—É–ø–æ–∫ –≤'
    f" –¥–µ–Ω—å, –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ –æ—Å—Ç–∞–ª—å–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º: —Ü–µ–Ω–µ –∏ —Ä–µ–≥–∏–æ–Ω—É –ø–æ—Å—Ç–∞–≤–∫–∏.\n"
    "\n"
    "–ò—Ç–∞–∫, –≤–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏–ª–∏ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ:\n"
)

NEW_QUERY_MSG = (
    "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –ø—Ä–∏ –ø–æ–º–æ—â–∏ "
    f"–∫–æ–º–∞–Ω–¥—ã /{commands.CHANGE_QUERY}. –¢–∞–∫ —á—Ç–æ –Ω–µ –±–æ–π—Ç–µ—Å—å –æ—à–∏–±–∏—Ç—å—Å—è üôÇ\n"
    "\n" + SEARCH_STRING_MSG
)

CHANGE_QUERY_MSG = SEARCH_STRING_MSG

# ===LOCATION===
SELECT_LOCATION = "–¢–µ–ø–µ—Ä—å, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω –¥–ª—è –ø–æ—Å—Ç–∞–≤–∫–∏:"
SELECT_LOCATION_INVALID = (
    "–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω —Ä–µ–≥–∏–æ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ"
)

# ===PRICE===
SET_MIN_PRICE = (
    "–£–∫–∞–∂–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –∑–∞–∫—É–ø–∫–∏ –≤ —Ä—É–±–ª—è—Ö.\n"
    "–ù–∞–ø—Ä–∏–º–µ—Ä: <b>0</b> –∏–ª–∏ <b>100 000</b>"
)

SET_MIN_PRICE_INVALID = (
    "–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞. "
    "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º, –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.\n"
    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑:"
)

SET_MAX_PRICE = (
    "–ò –Ω–∞–∫–æ–Ω–µ—Ü –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –≤ —Ä—É–±–ª—è—Ö.\n" "–ù–∞–ø—Ä–∏–º–µ—Ä: <b>10 000 000</b>"
)

SET_MAX_PRICE_NOT_A_NUMBER = (
    "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑:"
)
SET_MAX_PRICE_LESS_THAN_MIN = (
    "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π. "
    "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –ø–æ–±–æ–ª—å—à–µ üôÇ"
)


def trial_last_day_msg_formation(last_sub_day: datetime.datetime):
    date = dates.format_date_for_msg(last_sub_day)
    return f"–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞: {date}"


# —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –ö–ê —Å –∑–∞–¥–∞–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
def query_message_formation(
    search_string: str,
    location: str,
    min_price: int,
    max_price: int,
    with_n: bool = True,
) -> str:
    delimiter = ""
    if with_n:
        delimiter = "\n"

    min_price_str = utils.format_price_for_message(min_price)
    max_price_str = utils.format_price_for_message(max_price)

    answer = (
        f"üîç {SEARCH_STRING}: <b>{search_string}</b>\n"
        f"{delimiter}"
        f"üåè {REGION}: {location}\n"
        f"{delimiter}"
        f"üí∞ –¶–µ–Ω–∞: –æ—Ç {min_price_str} –¥–æ {max_price_str} —Ä—É–±–ª–µ–π"
    )

    return answer


# ==========change_query==========
WHICH_QUERY_DELETE = "–ö–∞–∫–æ–π –∑–∞–ø—Ä–æ—Å —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å?"
WHICH_QUERY_CHANGE = "–ö–∞–∫–æ–π –∑–∞–ø—Ä–æ—Å —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?"
UPDATED_QUERY = "–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞"


def changed_query_message_formation(
    search_string: str,
    location: str,
    min_price: int,
    max_price: int,
    query_number: str,
) -> str:
    answer = f"{UPDATED_QUERY} <b>{query_number}.\n</b>" f"\n"
    query = query_message_formation(
        search_string, location, min_price, max_price, False
    )

    return answer + query


# ==========show_all_my_queries==========


THERE_IS_NO_QUERIES = (
    f"–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ üôÇ. \n"
    f"–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–∫—É–ø–æ–∫ –º–æ–∂–Ω–æ "
    f"–∫–æ–º–∞–Ω–¥–æ–π /{commands.ADD_NEW_QUERY}\n"
)


def all_queries_messages_formation(
    queries: List[models.SearchQuery],
    subscription_last_day: Optional[datetime.datetime],
) -> str:
    answer = ""
    if not queries:
        answer = THERE_IS_NO_QUERIES

    for i, query in enumerate(queries):
        min_price = utils.format_price_for_message(query.min_price)
        max_price = utils.format_price_for_message(query.max_price)
        tmp = (
            f"<b>{i + 1}</b>. üîç {SEARCH_STRING}: {query.search_string}\n"
            f"    üåè {REGION}: {query.location}\n"
            f"    üí∞ –¶–µ–Ω–∞: –æ—Ç {min_price} –¥–æ {max_price} —Ä—É–±–ª–µ–π\n"
        )

        answer += tmp

    now = dates.get_current_time_for_db()
    if subscription_last_day and now < subscription_last_day:
        subscription_msg = (
            f"    üóìÔ∏è –û–∫–æ–Ω—á–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏: "
            f"{dates.format_date_for_msg(subscription_last_day)}\n"
        )
    else:
        subscription_msg = "    üóìÔ∏è –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞"

    answer += "\n"
    answer += subscription_msg

    return answer


def command_log_formation(command: str, user_id: int):
    return f"Command `{command}` was used by user {user_id}"


# ==========SUBSCRIPTION==========


def subscription_message_formation(user_id: str):
    now = dates.get_current_time_for_db()

    user = db.get_user_by_user_id(user_id=user_id)
    subscription_last_day = user.subscription_last_day if user else None
    max_number_of_queries = user.max_number_of_queries if user else None

    if subscription_last_day is None or subscription_last_day < now:
        subscription_msg = "üóìÔ∏è –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞"
    else:
        postfix = "–∑–∞–ø—Ä–æ—Å"
        if max_number_of_queries == 5:
            postfix = "–∑–∞–ø—Ä–æ—Å–æ–≤"
        subscription_msg = (
            f"üóìÔ∏è –¢–µ–∫—É—â–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ "
            f"{dates.format_date_for_msg(subscription_last_day)}"
            f" - {max_number_of_queries} {postfix}"
        )

    return subscription_msg


def after_subscription_message_formation(user_id: str):
    user = db.get_user_by_user_id(user_id=user_id)
    subscription_last_day = user.subscription_last_day if user else None
    max_number_of_queries = user.max_number_of_queries if user else None

    if subscription_last_day is None or max_number_of_queries is None:
        raise

    postfix = "–∑–∞–ø—Ä–æ—Å"
    if max_number_of_queries == 5:
        postfix = "–∑–∞–ø—Ä–æ—Å–æ–≤"

    subscription_msg = (
        f"üóìÔ∏è –¢–µ–∫—É—â–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ "
        f"{dates.format_date_for_msg(subscription_last_day)}"
        f" - {max_number_of_queries} {postfix}"
    )

    return subscription_msg
